import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { useDispatch } from "react-redux"; // ‚úÖ Th√™m d√≤ng n√†y
import NumDownUp from "../Component/number-down-up/NumDownUp";
import Tabs from "../Component/TabInDetail/Tabs";
import HandAddToCart from "../Component/Card-Product/AddToCart";
import { showToast } from "../Component/Card-Product/common/ToastNotification";
import axios from "axios";
import { fetchCartItems } from "./Redux/CartSlice";

const Detail = () => {
  const { slug } = useParams();
  const navigate = useNavigate();
  const dispatch = useDispatch(); // ‚úÖ Th√™m d√≤ng n√†y
  const [product, setProduct] = useState(null);
  const [currentIndex, setCurrentIndex] = useState(0);
  const [quantity, setQuantity] = useState(1);


  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const response = await fetch(`http://localhost:8080/products/${slug}`);
        const data = await response.json();
        setProduct(data);
      } catch (error) {
        console.error("Error fetching product:", error);
      }
    };

    fetchProduct();
  }, [slug]);

  useEffect(() => {
    if (!product || !product.imageUrl) return;

    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % product.imageUrl.length);
    }, 8000);

    return () => clearInterval(interval);
  }, [product]);

  const changeMainImage = (index) => {
    setCurrentIndex(index);
  };

  const tabData = [
    { id: "description", label: "ƒê·∫∑c ƒëi·ªÉm c·ªßa c√¢y", icon: "üìÑ", content: <p>{product?.description}</p> },
    { id: "about", label: "C√°ch chƒÉm s√≥c c√¢y", icon: "‚ÑπÔ∏è", content: <p>Tr·ªëng</p> },
    { id: "warranty", label: "ƒê√°nh gi√°", icon: "üîß", content: <p>Tr·ªëng</p> },
    {
      id: "faq",
      label: "H·ªèi ƒë√°p",
      icon: "‚ùì",
      content: (
        <div>
          <h3 className="font-bold text-lg mb-3">H·ªèi ƒê√°p Nhanh</h3>
          <ul>
            <li>Bao l√¢u th√¨ c·∫ßn t∆∞·ªõi n∆∞·ªõc cho c√¢y?</li>
            <li>L√†m th·∫ø n√†o ƒë·ªÉ bi·∫øt c√¢y thi·∫øu n∆∞·ªõc?</li>
            <li>T√¥i n√™n ƒë·∫∑t c√¢y ·ªü ƒë√¢u ƒë·ªÉ c√¢y ph√°t tri·ªÉn t·ªët?</li>
          </ul>
        </div>
      ),
    },
  ];

  const handleAddToCart = async (product) => {
    const username = localStorage.getItem("username");
    
    if (!username) {
      showToast("error", "Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!");
      navigate("/Dang-nhap");
      return;
    }
  
    const productId = product.id || product.productId;
    if (!productId) {
      showToast("error", "S·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá!");
      return;
    }
  
    const imageUrl =
      Array.isArray(product.imageUrl) && product.imageUrl.length > 0
        ? product.imageUrl[0]
        : "default-image-url.jpg";
  
    const cartItem = {
      username,
      productId,
      name: product.name,
      price: product.price,
      imageUrl,
      quantity: 1,
      slug: product.slug,
    };
  
    try {
      const response = await axios.post("http://localhost:8080/api/cart/add", cartItem);
      console.log(response.data); // Ki·ªÉm tra d·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ server
      dispatch(fetchCartItems(username)); // Load l·∫°i danh s√°ch gi·ªè h√†ng t·ª´ API
    
      showToast("success", "ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!");
    } catch (error) {
      console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", error);
      showToast("error", "Kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i!");
    }    
  };
  

  if (!product) return <div>Loading...</div>;

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        <div className="product-image ml-32">
          <img
            src={`https://drive.google.com/thumbnail?id=${product.imageUrl[currentIndex]}`}
            alt={product.name}
            className="w-full h-96 rounded-lg shadow-lg"
          />
          <div className="thumbnail-images mt-4 flex gap-4 justify-center">
            {product.imageUrl.slice(0, 3).map((image, index) => (
              <img
                key={index}
                src={`https://drive.google.com/thumbnail?id=${image}`}
                alt={`${product.name} thumbnail ${index}`}
                className={`w-20 h-20 object-cover rounded-lg cursor-pointer transition-all duration-300 ${
                  currentIndex === index ? "border-2 border-blue-500" : ""
                }`}
                onClick={() => changeMainImage(index)}
              />
            ))}
          </div>
        </div>

        <div className="product-info">
          <h2 className="text-3xl font-bold text-gray-800 mb-4">{product.name}</h2>
          <div className="flex items-center gap-4 mb-6">
            <span className="text-2xl font-semibold text-green-600">
              {new Intl.NumberFormat("vi-VN").format(product.price)} VNƒê
            </span>
            {product.price !== product.originalPrice && (
              <span className="text-sm line-through text-gray-500">
                {new Intl.NumberFormat("vi-VN").format(product.originalPrice)} VNƒê
              </span>
            )}
          </div>
          <p className="text-lg text-gray-700 mb-4">C√≤n l·∫°i: {product.stockQuantity} s·∫£n ph·∫©m</p>
          <div className="flex space-x-28 mb-8">
          <NumDownUp quantity={quantity} setQuantity={setQuantity} />
          </div>
          <div className="flex gap-4 mb-6">
            <button
              className="px-6 py-2 bg-gray-300 text-black rounded-lg hover:text-white hover:bg-green-700 transition duration-300"
              onClick={() => handleAddToCart(product)}
            >
              Th√™m v√†o gi·ªè h√†ng
            </button>

            <button
              className="px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-red-500 hover:text-white transition duration-300"
              onClick={() => navigate("/")}
            >
              Mua h√†ng
            </button>
          </div>
          <div className="flex gap-4">
            <button
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-800 transition duration-300"
              onClick={() => alert("Chat v·ªõi Zalo")}
            >
              Chat Zalo
            </button>
          </div>
        </div>
      </div>

      <div className="mt-10">
        <Tabs tabs={tabData} />
      </div>
    </div>
  );
};

export default Detail;
